/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) { 
    if (head == null) 
        return head; 
  
    ListNode tmp = head; 
    int len = 1; 
    while (tmp.next != null) 
    { 
        tmp = tmp.next; 
        len++; 
    } 
  
    if (k > len) 
        k = k % len; 
  
    k = len - k; 
      
    if (k == 0 || k == len) 
        return head; 
  
    ListNode current = head; 
    int cnt = 1; 
    while (cnt < k && current != null) 
    { 
        current = current.next; 
        cnt++; 
    } 
  
    if (current == null) 
        return head; 
  
    ListNode kthnode = current; 
  
    tmp.next = head; 
  
    head = kthnode.next; 
  
    kthnode.next = null; 
  
    return head; 
    }
}
